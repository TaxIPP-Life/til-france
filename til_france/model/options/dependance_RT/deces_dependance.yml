entities:
  individus:
    processes:
      vieillissement:
        - ageing()
        # dependance avant deces car le modèle de dépendance inclus un etat décédé
        - dependance()
        - deces()

      deces_selection:
        - qm: if(
            ISMALE,
            individu2generation.qm_male,
            individu2generation.qm_female
            )
        - qm_2010: if(
            ISMALE,
            individu2generation.qm_male_2010,
            individu2generation.qm_female_2010
            )
        - lq: log((MU * qm + (1 - MU) * qm_2010)) / (1 - (MU * qm + (1 - MU) * qm_2010))
        - etudes: (education_niveau > individu2generation.education_niveau)
        # - assertTrue(all(dependance_anciennete < 0, filter = (dependance_niveau < 1)))
        - decede_score: if(
            dependance_niveau == 5,
            1,
            -1
            )
        # cohortes PAQUID
        # decede_score != 1,
        - decede_score: if(
            age < 65,
            if(
              ISMALE,
              logit_score(
                (age < 85) * (1.538 + 1.358 * lq) + (age >= 85) * (2.696 + 2.107 * lq)
                ),
              logit_score(
                etudes * (.397 + .967 * lq) + (not etudes) * (1.774 + 1.398 * lq)
                )
              ),
            decede_score
            )
        # Les probabilités précédentes concernent des transitions à deux ans. On les ramènes à un an.
        - decede_score: 1 - (1 - decede_score) ** (1 / 2)
        - decede: if(
            ISMALE,
            align(decede_score, 'parameters/population/hyp_mortaliteH.csv'),
            align(decede_score, 'parameters/population/hyp_mortaliteF.csv')
            )
        # par simplicite pour l'heritage (parce que pour le reste ca marche)
        # on ne fait mourir qu une seule personne
        # A retirer pour tester, ca doit etre bon maintenant
        - decede: if(l_partner.decede and l_partner.id < id, False, decede)
        - decede: if(l_pere.decede, False, decede)
        - decede: if(l_mere.decede, False, decede)
        - show('Age moyen des partenaires', round(avg(l_partner.age, filter = l_partner.age > -1), 2))
        - show('\nNombre de personne dépendante décédées', count(decede and (dependance_niveau > 0)) * uniform_weight)
        - return decede

      statistiques_deces(decede):
        - csv(
            period, count(decede),
            fname = 'deces.csv', mode = 'a'
            )
        - show('\nNombre de décès (total = hommes + femmes)',
            round(count(decede) * uniform_weight), " = ",
            round(count(decede and ISMALE) * uniform_weight), " + ",
            round(count(decede and ISFEMALE) * uniform_weight)
            )
        - show('\nAge moyen des hommes décédés', round(avg(age, filter=decede and ISMALE), 2))
        - show('\nAge moyen des femmes décédées', round(avg(age, filter=decede and ISFEMALE), 2))
        - show('\nNombre de veuves', round(sum(ISWIDOW) * uniform_weight))
        - csv(
            groupby(
              period,
              age,
              sexe,
              (dependance_niveau >= 1) and decede,
              filter = (age >= 60)
              ),
            fname = 'dependance_deces.csv', mode = 'a'
            )
        - show('\nNombre de décès de dépendants (total = hommes + femmes)',
            round(count(
              (dependance_niveau > 1) and decede) * uniform_weight), " = ",
            round(count(
              (dependance_niveau > 1) and (decede and ISMALE)) * uniform_weight), " + ",
            round(count(
              (dependance_niveau > 1) and (decede and ISFEMALE)) * uniform_weight)
            )
        - show('\nAge moyen des hommes décédés', round(avg(age, filter=decede and ISMALE), 2))
        - show('\nAge moyen des femmes décédées', round(avg(age, filter=decede and ISFEMALE), 2))
        - show('\nNombre de veuves', round(sum(ISWIDOW) * uniform_weight))
