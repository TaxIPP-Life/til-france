# second entity, links, link methods, init, procedures, local variables,
# dump's suffix argument, choice

import:
    - individus/individus.yml
    - individus/register.yml
    - individus/generation.yml
    - logement/menages.yml
    - foyers_fiscaux/foyers_fiscaux.yml
    - revenus/revenus.yml
    - demographie/naissance.yml
    - demographie/migration.yml
    - demographie/deces.yml
    - demographie/union.yml
    - demographie/divorce.yml
    - dependance/dependance.yml
    - education/education.yml
    - logement/moving.yml
    - consommation/consommation.yml
    - patrimoine/epargne.yml
    - entreprises/entreprises.yml

globals:
    # periodic:
    #     path: param\demo\dependance_prevalence_all_years.csv
    #     fields:
    #         # PERIOD is implicit
    #         - DEPENDANTS: float

    # periodic do not work
    dependance_prevalence_all_years:
      type: float

    mortality_rate_male:
      type: float
    mortality_rate_female:
      type: float
    mortality_rate_male_1997:
      type: float
    mortality_rate_female_1997:
      type: float

simulation:
    init:
        - menages: [init_weight_men, init_region_id, init_rent, init_value, init_wealth, init_owner, men_composition]
        - individus: [
          init_weight_ind,
          init_couple,
          education_niveau_initialisation,
          chomage_initialization,
          productivity_initialization
          ]
        - generation: [mortality_rates]
        - individus: [init_dependance]
        - companies: [init_size]
        - foyers_fiscaux: [cases, empty_declar]
        - register: [init_reg]
        # - legislation: [2009]
        - register: [sum_indiv]
        - individus: [stat_period_ini, stat_period]


    processes:
    # apres chaque étape qui modifie les ménages,
    # on fait tourner une moulinette sur foyers_fiscaux et menages,pour s'assurer qu'on a les bons
    # vous et pref,
    # plus tard, quand le code le permettra, on changera ce vous directement dans l'étape au niveau individus
    # - individus: [age, dump_info, show_demography , marriage]
        # - register: [rien]
        - generation: [education]
        - generation: [mortality_rates]
        - individus: [ageing]
        - individus: [death]
        - individus: [dependance]
        - individus: [migration]
        - individus: [check]
        - individus: [independance]
        - individus: [check]
        - individus: [birth]
        - individus: [check]
        - menages: [men_composition]
        - foyers_fiscaux: [cases, empty_declar]
        - individus: [into_couple]
        - individus: [move_together]
        - individus: [check]
        - individus: [legal_union]
        - individus: [check]
        # - register: [sum_indiv]
        - menages: [men_composition]
        - foyers_fiscaux: [cases]
        - foyers_fiscaux: [empty_declar]
        - individus: [divorce]
        - individus: [check]
        - menages: [men_composition]
        - foyers_fiscaux: [cases, empty_declar]
        - individus: [ineducation, emploi_sortie, emploi_entree, retire, chomage, salaire , retraite
            # dump_all
            ]
        - individus: [check]
        - menages: [init_value, consumption, saving]
        # - companies: [rien]
        - legislation: [2009] #[annee leg] = année de départ de la simulation
        # - register: [alive]
        # - register: [sum_indiv]
        - individus: [stat_period]

    output:
       file: simul.h5

    logging:
        level: processes

    skip_shows: False
    timings: False
    # time_scale: 'year0'
    # retro: True

    start_period: 2010  #01
    # first simulated period is start_period + 1  TODO: a bit ugly !

    periods: 2
