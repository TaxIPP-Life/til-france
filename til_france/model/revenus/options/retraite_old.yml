entities:
  individus:
    processes:
      retraite:
          - rsti: if(
            ISRETIRED,
            if(BEGINER, 0.7 * salaire_imposable, rsti),
            0
            )
          # Actualisation du nombre d'enfants par r√©gime
          - new_born: invl_mere.count(age_en_mois == 0) + invl_pere.count(age_en_mois == 0)
          - nb_enf_RG: if(WORK_PRIVE, nb_enf + new_born, nb_enf)
          - nb_enf_RSI: if(WORK_INDEP, nb_enf + new_born, nb_enf)
          - nb_enf_FP: if(WORK_PUBLIC, nb_enf + new_born, nb_enf)

          - nb_pac: invl_mere.count(age <= 18) + invl_pere.count(age <= 18)

          - date_depart: date_retired()
          - to_be_retired: date_depart <= period and date_depart != -1 and not ISRETIRED

          - start_retirement: if(to_be_retired, period, start_retirement)
          - workstate: if(to_be_retired, RETIRED, workstate)
          - rsti: pension_func() # -> TODO: Add a filter with to_be_retired
          - test: count(rsti>0)
