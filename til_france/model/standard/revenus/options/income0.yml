entities:
    individus:
        processes:

            productivite_initialisation:
                - productivite: 0
                # destinie (1991)
                # Roux (jusque 2002)
                - mincer : 7.6 + 0.08 * findet + 0.04 * xpr - 0.0006 * xpr * xpr
                - productivite: if(
                    salaire_imposable > 0,
                    salaire_imposable - mincer,
                    productivite
                    )

            chomage:
                - fet: findet
                - seuil_xpr : max(6 - xpr, 0)
                - seuil_anc : max(6 - anc, 0)
                - xprer: xpr
                - choi: if(ISUNEMPLOYED,
                             if(BEGINER, 0.7 * salaire_imposable, 0.8 * choi),
                          0)
            retraite:
                - rsti: if(ISRETIRED,
                             if(BEGINER, 0.7 * salaire_imposable, rsti),
                          0)
                # Actualisation du nombre d'enfants par r√©gime
                - new_born: invl_mere.count(age_en_mois==0) + invl_pere.count(age_en_mois==0)
                - nb_enf_RG: if(WORK_PRIVE, nb_enf + new_born, nb_enf)
                - nb_enf_RSI: if(WORK_INDEP, nb_enf + new_born, nb_enf)
                - nb_enf_FP: if(WORK_PUBLIC, nb_enf + new_born, nb_enf)

                - nb_pac: invl_mere.count(age <= 18) + invl_pere.count(age <= 18)

                - date_depart: date_retired()
                - to_be_retired: date_depart <= period and date_depart != -1 and not ISRETIRED

                - start_retirement: if(to_be_retired, period, start_retirement)
                - workstate: if(to_be_retired, RETIRED, workstate)
                - rsti: pension_func() # -> TODO: Add a filter with to_be_retired
                - test: count(rsti>0)

            salaire:
                - mincer: 0
                # destinie (1991)
                # Roux (jusque 2002)
                - mincer : 7.6 + 0.08 * findet + 0.04 * xpr - 0.0006 * xpr*xpr
                # Aubert-Bachelet (destinie)
                # demander les vrai coeff ci-dessous pour faire du non statique
                - fet: findet
                - seuil_xpr : max(6-xpr,0)
                - seuil_anc : max(6-anc,0)
                - mincer: if(WORK_PRIVE,
                            if(ISMALE,
                                -63.90
                                +3.13*xpr-0.05*xpr*xpr-3.86*seuil_xpr
                                +1.95*anc-0.03*anc*anc-4.02*seuil_anc-58.98*(anc==1)
                                +6.24*fet
                                +0.34*fet*xpr-0.01*fet*xpr*xpr+0.53*fet*seuil_xpr
                                +0.43*fet*anc-0.01*fet*anc*anc-0.48*fet*seuil_anc,
                                -66.42
                                +1.10*xpr-0.02*xpr*xpr-2.48*seuil_xpr
                                +3.09*anc-0.04*anc*anc-4.70*seuil_anc-66.68*(anc==1)
                                +6.08*fet
                                +0.28*fet*xpr-0.01*fet*xpr*xpr-0.34*fet*seuil_xpr
                                +0.20*fet*anc+0.00*fet*anc*anc+0.16*fet*seuil_anc),
                           mincer)
                - mincer: if(
                    WORK_PUBLIC,
                    if(
                      ISMALE,
                      -43.44 + 1.64 * xpr - 0.02 * xpr * xpr - 2.04 * seuil_xpr +
                      1.21 * anc - 0.01 * anc * anc - 0.75 * seuil_anc - 17.31 * (anc==1)
                      + 5.14 * fet
                      + 0.38 * fet * xpr + 0.00 * fet * xpr * xpr + 0.90 * fet * seuil_xpr
                      - 0.25 * fet * anc + 0.00 * fet * anc * anc + 0.00 * fet * seuil_anc,
                      - 26.92
                      + 0.44*xpr+0.00*xpr*xpr+1.21*seuil_xpr
                      + 1.34*anc-0.01*anc*anc-0.84*seuil_anc-19.35*(anc==1)
                      + 4.08*fet
                      + 0.26*fet*xpr+0.00*fet*xpr*xpr+0.42*fet*seuil_xpr
                      -0.18*fet*anc+0.00*fet*anc*anc-0.55*fet*seuil_anc
                      ),
                    mincer
                    )
                - mincer: if(
                    WORK_INDEP,
                    if(
                      ISMALE,
                      -54.88,
                      -63.8
                      ),
                    mincer)
                - mincer: exp(mincer / 100)

                - salaire_imposable: if(ISINWORK, mincer + productivite, 0)

            rev_cap:
                - capital_inc: l_men.wealth * 0.1 * (quimen==1)
