import:
  - individus/individus.yml
  - individus/register.yml
  - generations/generation.yml
  - logement/menages.yml
  - foyers_fiscaux/foyers_fiscaux.yml
  - revenus/revenus.yml
  - demographie/naissance.yml
  - demographie/migration.yml
  - demographie/vieillissement.yml
  - demographie/union.yml
  - demographie/rupture.yml
  - education/education.yml
  - logement/moving.yml
  - consommation/consommation.yml
  - patrimoine/epargne.yml
  - entreprises/entreprises.yml

globals:
  # weight: 200
  uniform_weight:
    type: float


simulation:
  init:
    - menages: [init_weight_men, init_region_id, init_rent, init_value, init_wealth, init_owner, composition_mise_a_jour]
    - individus: [
      init_weight_ind,
      couple_initialisation,
      education_niveau_initialisation,
      chomage_initialisation,
      productivite_initialisation
      ]
    - generation: [options_initialisation]
    - individus: [options_initialisation]
    - companies: [init_size]
    - foyers_fiscaux: [cases, empty_declar]
    - register: [init_reg]
    # - legislation: [2009]
    - register: [sum_indiv]
    - individus: [statistiques_initialisation, statistiques_fin_de_periode]

  processes:
  # apres chaque étape qui modifie les ménages,
  # on fait tourner une moulinette sur foyers_fiscaux et menages,pour s'assurer qu'on a les bons
  # vous et pref,
  # plus tard, quand le code le permettra, on changera ce vous directement dans l'étape au niveau individus
  # - individus: [age, dump_info, show_demography , marriage]
    # - register: [rien]
    # Démographie (1. Migration, 2. Décès, 3. Séparations, 4. Mises en couple, 5. Naissances)
    - generation: [mise_a_jour]
    ## 1. Migration
    - individus: [migration]
    ## 2. Décès
    - individus: [vieillissement]
    - individus: [check]
    - individus: [independance]
    - individus: [check]
    ## 3. Séparations
    - individus: [couple_rupture]
    - individus: [check]
    - menages: [composition_mise_a_jour]
    - foyers_fiscaux: [cases, empty_declar]
    ## 4. Mises en couple
    - individus: [couple_formation]
    - individus: [move_together]
    - individus: [check]
    - individus: [legal_union]
    - individus: [check]
    ### - register: [sum_indiv]
    - menages: [composition_mise_a_jour]
    - foyers_fiscaux: [cases]
    - foyers_fiscaux: [empty_declar]
    ## 5. Naissances
    - individus: [naissance]
    - individus: [check]
    - menages: [composition_mise_a_jour]
    - foyers_fiscaux: [cases, empty_declar]
    # Education - Marché du travail
    - individus: [ineducation, emploi_sortie, emploi_entree, retire, chomage, salaire , retraite
        # dump_all
        ]
    - individus: [check]
    # Consommation épargne
    - menages: [init_value, consumption, saving]
    # - companies: [rien]
    - legislation: [2009] #[annee leg] = année de départ de la simulation
    # - register: [alive]
    # - register: [sum_indiv]
    - individus: [statistiques_fin_de_periode]

  output:
    file: simul.h5

  assertions: raise       # raise (default), xarn, skip
  skip_shows: False
  logging:                # optional
    timings: False       # optional
    level: functions    # optional

  random_seed: 12345       # optional

  start_period: 2010  #01
  # first simulated period is start_period + 1  TODO: a bit ugly !

  periods: 50
