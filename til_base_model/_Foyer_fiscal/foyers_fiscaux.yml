entities:
    foyers_fiscaux:
        fields:
            # period and id are implicit
            - nb_individus: {type: int, initialdata: false}
            - nb_pac: {type: int, initialdata: false}
            - nb_adultes:  {type: int, initialdata: false}
            - nbF: {type: int, initialdata: false}
            - nbJ: {type: int, initialdata: false}
            - caseT: {type: int, initialdata: false}
            - pond: float
            - vous: int

            # legislation
            - decote: {type: float, initialdata: false}
            - irpp: {type: float, initialdata: false}
            - isf_tot: {type: float, initialdata: false}
            - avantage_qf: {type: float, initialdata: false}

        links:
            in_foyers_fiscaux: {type: one2many, target: individus, field: idfoy}
            l_vous: {type: many2one, target: individus, field: vous}

        processes:

            cases:
                - nb_individus: in_foyers_fiscaux.count()
                - nb_pac: in_foyers_fiscaux.count(quifoy > 1)
                - nbF: in_foyers_fiscaux.count((age <= 18) and (quifoy > 1))
                - nbJ: in_foyers_fiscaux.count((age > 18) and (quifoy > 1))
                # etre seul dans le foyer fiscal + avoir de personnes a charge + ne pas etre en couple => case_l
                - caseT: ((in_foyers_fiscaux.count(quifoy < 2) == 1) and (nbF + nbJ > 0) and (not l_vous.partner > 0))

            empty_declar:
                - nb_individus: in_foyers_fiscaux.count()
                - nb_adultes: in_foyers_fiscaux.count(quifoy < 2)
                - nb_pac: in_foyers_fiscaux.count(quifoy > 1)
                - empty: (nb_individus == 0)

                - test_vous: in_foyers_fiscaux.count(quifoy == 0)
                - show('nombre de quifoy', groupby(test_vous,nb_individus))
                - separ: l_vous.idfoy != id
                - show('nombre probleme de vous', count(l_vous.quifoy != 0))
                - show('nombre separ', count(separ))
                - candidat: in_foyers_fiscaux.min(id,quifoy==0)
                - vous: if(
                    separ and in_foyers_fiscaux.count(quifoy == 0) == 1,
                    in_foyers_fiscaux.min(id, quifoy == 0),
                    vous
                    )
                - remove(empty)
                - test_vous: in_foyers_fiscaux.count(quifoy == 0)
                - show('nombre probleme de vous apres', count(l_vous.quifoy != 0))
